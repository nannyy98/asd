"""
–£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
"""

import threading
import time
from datetime import datetime
from utils import format_date
from logger import logger

class AutoPostsManager:
    def __init__(self, bot, db):
        self.bot = bot
        self.db = db
        self.scheduler_running = False
        self.channel_id = "-1002566537425"  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–æ—Å—Ç–æ–≤
        self.post_templates = self.load_post_templates()
        self.start_scheduler()
    
    def load_post_templates(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ—Å—Ç–æ–≤"""
        return {
            'morning_greeting': {
                'title': '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåÖ',
                'content': '''üåÖ <b>–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¥–æ—Ä–æ–≥–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏!</b>

‚òï –ù–∞—á–Ω–∏—Ç–µ –¥–µ–Ω—å —Å –ø—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!

üõç <b>–°–µ–≥–æ–¥–Ω—è –¥–ª—è –≤–∞—Å:</b>
‚Ä¢ –ù–æ–≤–∏–Ω–∫–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞

üí´ –ñ–µ–ª–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—è!''',
                'image': 'https://images.pexels.com/photos/1002703/pexels-photo-1002703.jpeg',
                'time': '09:00'
            },
            
            'afternoon_promo': {
                'title': '–î–Ω–µ–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è! ‚òÄÔ∏è',
                'content': '''‚òÄÔ∏è <b>–î–æ–±—Ä—ã–π –¥–µ–Ω—å!</b>

üî• <b>–ì–û–†–Ø–ß–ò–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø –î–ù–Ø:</b>
‚Ä¢ –°–∫–∏–¥–∫–∏ –¥–æ 30% –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç $50
‚Ä¢ –ù–æ–≤–∏–Ω–∫–∏ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Ü–µ–Ω–∞–º

‚è∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤—É—é—Ç –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è!
üõí –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!''',
                'image': 'https://images.pexels.com/photos/1303081/pexels-photo-1303081.jpeg',
                'time': '14:00'
            },
            
            'evening_recommendations': {
                'title': '–í–µ—á–µ—Ä–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üåÜ',
                'content': '''üåÜ <b>–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä!</b>

üí° <b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å –ø–æ–¥–æ–±—Ä–∞–ª–∏:</b>
‚Ä¢ –¢–æ–≤–∞—Ä—ã –ø–æ –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º
‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–∏–Ω–∫–∏
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

üéÅ –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑ —Å–µ–≥–æ–¥–Ω—è –∏ –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É 5%

üåô –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞ –∏ —É–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!''',
                'image': 'https://images.pexels.com/photos/230544/pexels-photo-230544.jpeg',
                'time': '19:00'
            },
            
            'special_promotion': {
                'title': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∞–∫—Ü–∏—è! üéÅ',
                'content': '''üéÅ <b>–°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ê–ö–¶–ò–Ø!</b>

üî• <b>–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è:</b>
‚Ä¢ –°–∫–∏–¥–∫–∞ 25% –Ω–∞ –í–°–ï —Ç–æ–≤–∞—Ä—ã
‚Ä¢ –ü—Ä–æ–º–æ–∫–æ–¥: SPECIAL25
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞

‚ö° <b>–£—Å–ø–µ–π—Ç–µ –¥–æ –ø–æ–ª—É–Ω–æ—á–∏!</b>
üõç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ!

üí∞ –≠–∫–æ–Ω–æ–º—å—Ç–µ –¥–æ $200 –Ω–∞ –ø–æ–∫—É–ø–∫–∞—Ö!''',
                'image': 'https://images.pexels.com/photos/1464625/pexels-photo-1464625.jpeg',
                'time': '16:00'
            },
            
            'weekend_sale': {
                'title': '–í—ã—Ö–æ–¥–Ω—ã–µ —Å–∫–∏–¥–∫–∏! üéâ',
                'content': '''üéâ <b>–í–´–•–û–î–ù–´–ï –°–ö–ò–î–ö–ò!</b>

üõç <b>–í–µ—Å—å —É–∏–∫–µ–Ω–¥ –¥–µ–π—Å—Ç–≤—É—é—Ç:</b>
‚Ä¢ –°–∫–∏–¥–∫–∏ –¥–æ 40% –Ω–∞ —Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ 10% –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –æ—Ç $100
‚Ä¢ –ü–æ–¥–∞—Ä–æ–∫ –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–∫–∞–∑—É

üéØ <b>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</b>
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ -30%
‚Ä¢ –û–¥–µ–∂–¥–∞ -25% 
‚Ä¢ –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞ -35%

‚è∞ –î–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ!''',
                'image': 'https://images.pexels.com/photos/1464625/pexels-photo-1464625.jpeg',
                'time': '11:00'
            },
            
            'new_arrivals': {
                'title': '–ù–æ–≤–∏–Ω–∫–∏ –Ω–µ–¥–µ–ª–∏! ‚ú®',
                'content': '''‚ú® <b>–ù–û–í–ò–ù–ö–ò –ù–ï–î–ï–õ–ò!</b>

üÜï <b>–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ —Å–≤–µ–∂–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:</b>
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤
‚Ä¢ –¢—Ä–µ–Ω–¥–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ —Å–µ–∑–æ–Ω–∞
‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –≥–∞–¥–∂–µ—Ç—ã

üéÅ <b>–î–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:</b>
‚Ä¢ –°–∫–∏–¥–∫–∞ 15% –Ω–∞ –Ω–æ–≤–∏–Ω–∫–∏
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –ª—É—á—à–µ–π —Ü–µ–Ω—ã

üöÄ –ë—É–¥—å—Ç–µ –≤ —Ç—Ä–µ–Ω–¥–µ —Å –Ω–∞—à–∏–º–∏ –Ω–æ–≤–∏–Ω–∫–∞–º–∏!''',
                'image': 'https://images.pexels.com/photos/1464625/pexels-photo-1464625.jpeg',
                'time': '12:00'
            }
        }
    
    def start_scheduler(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å—Ç–æ–≤"""
        if self.scheduler_running:
            return
        
        def scheduler_worker():
            while True:
                try:
                    current_time = datetime.now().strftime('%H:%M')
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤
                    if current_time == '09:00':
                        self.send_auto_post('morning_greeting')
                        time.sleep(60)  # –ñ–¥–µ–º –º–∏–Ω—É—Ç—É —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–≤–∞–∂–¥—ã
                    elif current_time == '14:00':
                        self.send_auto_post('afternoon_promo')
                        time.sleep(60)
                    elif current_time == '19:00':
                        self.send_auto_post('evening_recommendations')
                        time.sleep(60)
                    
                    time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å—Ç–æ–≤: {e}")
                    time.sleep(300)  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –∂–¥–µ–º 5 –º–∏–Ω—É—Ç
        
        scheduler_thread = threading.Thread(target=scheduler_worker, daemon=True)
        scheduler_thread.start()
        self.scheduler_running = True
        logger.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω (3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å: 09:00, 14:00, 19:00)")
    
    def send_auto_post(self, template_key):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞"""
        try:
            template = self.post_templates.get(template_key)
            if not template:
                print(f"‚ùå –®–∞–±–ª–æ–Ω {template_key} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            print(f"üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∞: {template['title']}")
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message_text = f"üì¢ <b>{template['title']}</b>\n\n{template['content']}"
            message_text += f"\n\nüõç –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥: /start"
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = self.create_post_keyboard()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª
            try:
                if template.get('image'):
                    result = self.bot.send_photo(self.channel_id, template['image'], message_text, keyboard)
                else:
                    result = self.bot.send_message(self.channel_id, message_text, keyboard)
                
                if result and result.get('ok'):
                    print(f"‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {template['title']}")
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
                    time.sleep(3)
                    self.send_popular_products()
                    
                    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    self.log_post_statistics(template_key, 1, 0)
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∞: {result}")
                    self.log_post_statistics(template_key, 0, 1)
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∞: {e}")
                self.log_post_statistics(template_key, 0, 1)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∞ {template_key}: {e}")
    
    def send_popular_products(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Å—Ç–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º 3 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
            popular_products = self.db.execute_query('''
                SELECT id, name, price, image_url, views, sales_count
                FROM products
                WHERE is_active = 1 AND stock > 0
                ORDER BY (views * 0.3 + sales_count * 0.7) DESC
                LIMIT 3
            ''')
            
            if not popular_products:
                return
            
            for product in popular_products:
                self.send_product_card(product)
                time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–æ–≤–∞—Ä–∞–º–∏
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {e}")
    
    def send_product_card(self, product):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞"""
        try:
            product_id, name, price, image_url, views, sales_count = product
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤—ã
            reviews = self.db.execute_query('''
                SELECT AVG(rating) as avg_rating, COUNT(*) as reviews_count
                FROM reviews
                WHERE product_id = ?
            ''', (product_id,))
            
            avg_rating = reviews[0][0] if reviews and reviews[0][0] else 0
            reviews_count = reviews[0][1] if reviews else 0
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            product_message = f"üõç <b>{name}</b>\n\n"
            product_message += f"üí∞ –¶–µ–Ω–∞: <b>${price:.2f}</b>\n"
            
            if avg_rating > 0:
                stars = '‚≠ê' * int(avg_rating)
                product_message += f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {stars} {avg_rating:.1f}/5 ({reviews_count} –æ—Ç–∑—ã–≤–æ–≤)\n"
            
            product_message += f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {views}\n"
            product_message += f"üõí –ü—Ä–æ–¥–∞–Ω–æ: {sales_count} —à—Ç.\n\n"
            product_message += f"üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä –≤ –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ!"
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
            product_keyboard = {
                'inline_keyboard': [
                    [
                        {'text': 'üõí –ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä', 'url': f'https://t.me/your_bot_username?start=product_{product_id}'},
                        {'text': '‚≠ê –í—Å–µ –æ—Ç–∑—ã–≤—ã', 'url': f'https://t.me/your_bot_username?start=reviews_{product_id}'}
                    ]
                ]
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
            if image_url:
                self.bot.send_photo(self.channel_id, image_url, product_message, product_keyboard)
            else:
                self.bot.send_message(self.channel_id, product_message, product_keyboard)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
    
    def create_post_keyboard(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤"""
        return {
            'inline_keyboard': [
                [
                    {'text': 'üõí –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', 'url': 'https://t.me/your_bot_username?start=catalog'},
                    {'text': 'üåê –ù–∞—à —Å–∞–π—Ç', 'url': 'https://your-website.com'}
                ],
                [
                    {'text': 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'url': 'https://t.me/your_support_username'},
                    {'text': 'üì± –ó–∞–∫–∞–∑–∞—Ç—å –≤ –±–æ—Ç–µ', 'url': 'https://t.me/your_bot_username'}
                ]
            ]
        }
    
    def send_custom_post(self, post_type, custom_content=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞"""
        try:
            if post_type in self.post_templates:
                template = self.post_templates[post_type]
            else:
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø–æ—Å—Ç
                template = {
                    'title': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                    'content': custom_content or '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤!',
                    'image': 'https://images.pexels.com/photos/1464625/pexels-photo-1464625.jpeg'
                }
            
            message_text = f"üì¢ <b>{template['title']}</b>\n\n{template['content']}"
            message_text += f"\n\nüõç –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥: /start"
            
            keyboard = self.create_post_keyboard()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
            if template.get('image'):
                result = self.bot.send_photo(self.channel_id, template['image'], message_text, keyboard)
            else:
                result = self.bot.send_message(self.channel_id, message_text, keyboard)
            
            if result and result.get('ok'):
                print(f"‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {template['title']}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞: {result}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞: {e}")
            return False
    
    def send_birthday_post(self, customer_name=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è"""
        birthday_content = f'''üéâ <b>–° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è!</b>

üéÇ –°–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å{f" —É {customer_name}" if customer_name else ""}!

üéÅ <b>–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏:</b>
‚Ä¢ –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
‚Ä¢ –ü—Ä–æ–º–æ–∫–æ–¥: BIRTHDAY20
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
‚Ä¢ –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞

ü•≥ –ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é –∏ –ø—Ä–∏—è—Ç–Ω—ã–º–∏ —Å—é—Ä–ø—Ä–∏–∑–∞–º–∏!

üíù –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ –ø–æ–¥–∞—Ä–æ–∫ –≤ –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ!'''
        
        return self.send_custom_post('birthday', birthday_content)
    
    def send_flash_sale_post(self, discount_percent=30, duration_hours=24):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –æ —Ñ–ª–µ—à-—Ä–∞—Å–ø—Ä–æ–¥–∞–∂–µ"""
        flash_content = f'''‚ö° <b>–§–õ–ï–®-–†–ê–°–ü–†–û–î–ê–ñ–ê!</b>

üî• <b>–¢–û–õ–¨–ö–û {duration_hours} –ß–ê–°–û–í:</b>
‚Ä¢ –°–∫–∏–¥–∫–∞ {discount_percent}% –Ω–∞ –í–°–ï —Ç–æ–≤–∞—Ä—ã
‚Ä¢ –ü—Ä–æ–º–æ–∫–æ–¥: FLASH{discount_percent}
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ!

‚è∞ <b>–¢–æ—Ä–æ–ø–∏—Ç–µ—Å—å!</b>
–î–æ –∫–æ–Ω—Ü–∞ –∞–∫—Ü–∏–∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏!

üí® –°–∞–º—ã–µ –±—ã—Å—Ç—Ä—ã–µ –ø–æ–ª—É—á–∞—Ç –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã!
üõí –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!'''
        
        return self.send_custom_post('flash_sale', flash_content)
    
    def send_new_product_post(self, product_id):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –æ –Ω–æ–≤–æ–º —Ç–æ–≤–∞—Ä–µ"""
        try:
            product = self.db.get_product_by_id(product_id)
            if not product:
                return False
            
            new_product_content = f'''üÜï <b>–ù–û–í–ò–ù–ö–ê –í –ö–ê–¢–ê–õ–û–ì–ï!</b>

‚ú® <b>{product[1]}</b>

üìù {product[2][:150] if product[2] else '–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –Ω–∞—à–∏—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π!'}

üí∞ –¶–µ–Ω–∞: <b>${product[3]:.2f}</b>
üì¶ –í –Ω–∞–ª–∏—á–∏–∏: {product[7]} —à—Ç.

üéÅ <b>–î–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:</b>
‚Ä¢ –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –Ω–æ–≤–∏–Ω–∫—É
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞

üöÄ –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º–∏, –∫—Ç–æ –æ—Ü–µ–Ω–∏—Ç –Ω–æ–≤–∏–Ω–∫—É!'''
            
            message_text = f"üì¢ <b>–ù–æ–≤–∏–Ω–∫–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ! ‚ú®</b>\n\n{new_product_content}"
            message_text += f"\n\nüõç –ó–∞–∫–∞–∑–∞—Ç—å: /start"
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
            product_keyboard = {
                'inline_keyboard': [
                    [
                        {'text': 'üõí –ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä', 'url': f'https://t.me/your_bot_username?start=product_{product_id}'},
                        {'text': 'üì± –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', 'url': 'https://t.me/your_bot_username?start=catalog'}
                    ],
                    [
                        {'text': 'üåê –ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ', 'url': f'https://your-website.com/product/{product_id}'},
                        {'text': 'üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'url': 'https://t.me/your_support_username'}
                    ]
                ]
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
            if product[6]:  # image_url
                result = self.bot.send_photo(self.channel_id, product[6], message_text, product_keyboard)
            else:
                result = self.bot.send_message(self.channel_id, message_text, product_keyboard)
            
            return result and result.get('ok')
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞ –æ –Ω–æ–≤–æ–º —Ç–æ–≤–∞—Ä–µ: {e}")
            return False
    
    def log_post_statistics(self, post_type, sent_count, error_count):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å—Ç–æ–≤"""
        try:
            current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            self.db.execute_query('''
                INSERT INTO autopost_statistics (
                    post_type, sent_count, error_count, sent_at
                ) VALUES (?, ?, ?, ?)
            ''', (post_type, sent_count, error_count, current_time))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å—Ç–æ–≤: {e}")
    
    def get_post_statistics(self, days=7):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å—Ç–æ–≤"""
        try:
            return self.db.execute_query('''
                SELECT post_type, SUM(sent_count) as total_sent, SUM(error_count) as total_errors,
                       COUNT(*) as posts_count, MAX(sent_at) as last_sent
                FROM autopost_statistics
                WHERE sent_at >= date('now', '-{} days')
                GROUP BY post_type
                ORDER BY total_sent DESC
            '''.format(days))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return []
    
    def send_manual_post(self, title, content, image_url=None):
        """–†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞"""
        try:
            message_text = f"üì¢ <b>{title}</b>\n\n{content}"
            message_text += f"\n\nüõç –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥: /start"
            
            keyboard = self.create_post_keyboard()
            
            if image_url:
                result = self.bot.send_photo(self.channel_id, image_url, message_text, keyboard)
            else:
                result = self.bot.send_message(self.channel_id, message_text, keyboard)
            
            return result and result.get('ok')
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞: {e}")
            return False
    
    def get_available_templates(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
        templates_info = []
        for key, template in self.post_templates.items():
            templates_info.append({
                'key': key,
                'title': template['title'],
                'time': template.get('time', '–†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞'),
                'description': template['content'][:100] + '...'
            })
        return templates_info
    
    def update_post_schedule(self, morning_time='09:00', afternoon_time='14:00', evening_time='19:00'):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤"""
        self.post_templates['morning_greeting']['time'] = morning_time
        self.post_templates['afternoon_promo']['time'] = afternoon_time
        self.post_templates['evening_recommendations']['time'] = evening_time
        
        print(f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {morning_time}, {afternoon_time}, {evening_time}")
    
    def create_autopost_table(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤"""
        try:
            self.db.execute_query('''
                CREATE TABLE IF NOT EXISTS autopost_statistics (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    post_type TEXT NOT NULL,
                    sent_count INTEGER DEFAULT 0,
                    error_count INTEGER DEFAULT 0,
                    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                )
            ''')
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤: {e}")

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
ScheduledPostsManager = AutoPostsManager